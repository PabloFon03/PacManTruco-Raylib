#include "Board.h";

Board::Board()
{
}

void Board::Start()
{

	// 19x22
	std::vector<int> mazeTiles
	{
		7, 11, 11, 11, 11, 11, 11, 11, 11, 15, 11, 11, 11, 11, 11, 11, 11, 11, 13,
		6, 18, 18, 18, 18, 18, 18, 18, 18, 6, 18, 18, 18, 18, 18, 18, 18, 18, 6,
		6, 19, 7, 13, 18, 7, 11, 13, 18, 6, 18, 7, 11, 13, 18, 7, 13, 19, 6,
		6, 18, 4, 10, 18, 4, 11, 10, 18, 5, 18, 4, 11, 10, 18, 4, 10, 18, 6,
		6, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 6,
		6, 18, 9, 3, 18, 2, 18, 9, 11, 15, 11, 3, 18, 2, 18, 9, 3, 18, 6,
		6, 18, 18, 18, 18, 6, 18, 18, 18, 6, 18, 18, 18, 6, 18, 18, 18, 18, 6,
		4, 11, 11, 13, 18, 8, 11, 3, 0, 5, 0, 9, 11, 14, 18, 7, 11, 11, 10,
		0, 0, 0, 6, 18, 6, 0, 0, 0, 0, 0, 0, 0, 6, 18, 6, 0, 0, 0,
		11, 11, 11, 10, 18, 5, 0, 7, 3, 17, 9, 13, 0, 5, 18, 4, 11, 11, 11,
		0, 0, 0, 0, 18, 0, 0, 6, 0, 0, 0, 6, 0, 0, 18, 0, 0, 0, 0,
		11, 11, 11, 13, 18, 2, 0, 4, 11, 11, 11, 10, 0, 2, 18, 7, 11, 11, 11,
		0, 0, 0, 6, 18, 6, 0, 0, 0, 0, 0, 0, 0, 6, 18, 6, 0, 0, 0,
		7, 11, 11, 10, 18, 5, 0, 9, 11, 15, 11, 3, 0, 5, 18, 4, 11, 11, 13,
		6, 18, 18, 18, 18, 18, 18, 18, 18, 6, 18, 18, 18, 18, 18, 18, 18, 18, 6,
		6, 18, 9, 13, 18, 9, 11, 3, 18, 5, 18, 9, 11, 3, 18, 7, 3, 18, 6,
		6, 19, 18, 6, 18, 18, 18, 18, 18, 0, 18, 18, 18, 18, 18, 6, 18, 19, 6,
		8, 3, 18, 5, 18, 2, 18, 9, 11, 15, 11, 3, 18, 2, 18, 5, 18, 9, 14,
		6, 18, 18, 18, 18, 6, 18, 18, 18, 6, 18, 18, 18, 6, 18, 18, 18, 18, 6,
		6, 18, 9, 11, 11, 12, 11, 3, 18, 5, 18, 9, 11, 12, 11, 11, 3, 18, 6,
		6, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 18, 6,
		4, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 10
	};
	maze = Maze(mazeTiles);
	maze.LoadTextureAtlas();

	player.coords.x = 9;
	player.coords.y = 16;
	player.dirIndex = 3;
	player.LoadTextureAtlas();

}

void Board::Update()
{

	maze.Update();

	player.Update(this, &maze);

}

void Board::OnDraw()
{

	maze.OnDraw();

	player.OnDraw();

	DrawText(("Score: " + std::to_string(score)).c_str(), 8, 8, 16, WHITE);

}

void Board::ClearTile(int _i)
{

	maze.ClearTile(_i);

}

void Board::AddScore(int _s)
{

	score += _s;

}

void Board::OnPowerCollected()
{
}